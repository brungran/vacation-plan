openapi: 3.1.0

info:
  title: Vacation Plan
  description: Basic API for CRUD operations and PDF generation.
  version: '1.0'
  contact: brungran@gmail.com
  
servers:
- url: http://localhost/api
  description: Vacation Plan

components:
  securitySchemes:
    bearerAuth:  # Define an authentication scheme named "bearerAuth"
      type: http
      scheme: bearer
      bearerFormat: Authorization  # Header name for the token
  schemas:
    vacationplan:
      type: object
      properties:
        id:
          type: integer
          description: ID of the vacation plan.
        title:
          type: string
          description: Title of the vacation plan.
        date:
          type: string
          description: Date planned for the vacation. Format Y-m-d
        location:
          type: string
          description: Location planned for the vacation.
        participants:
          type: integer
          description: Number of people that will partake in the vacation.
    successful:
      type: object
      properties:
        Successful:
          type: boolean
          default: true
        data:
          type: array
          items:
            $ref: "#/components/schemas/vacationplan"
    unsuccessful:
        type: object
        properties:
          Successful:
            type: boolean
            default: false
          Message:
            type: string
            default: 'Vacation plan not found.'

paths:
  "/register":
    post:
      tags: ["User"]
      summary: Register a new user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
        required: true
      responses:
        "201":
          description: User created
          content:
            application/json: #Response is returned in JSON
              schema:
                type: object
                properties:
                  Successful:
                    type: boolean
                    default: true
                  Message:
                    type: string
                    default: User registered sucessfully.
  "/login":
    post:
      tags: ["User"]
      summary: User login for token retrieval.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
        required: true
      responses:
        "200":
          description: All went well
          content:
            application/json: #Response is returned in JSON
              schema:
                type: object
                properties:
                  Successful:
                    type: boolean
                    default: true
                  Message:
                    type: string
                    default: User logged in.
                  Access_Token:
                    type: string
                  Token_Type:
                    type: string
                    default: Bearer
  "/vacationplans":
    parameters:
    - name: per_page
      in: path
      description: How many entries per page
      # Since this is in the path, the parameter HAS to be required
      required: false
      # Defining the type of the parameter
      schema:
        # In this case, it is just a string
        type: string
    get:
      tags: ["Vacation Plan"]
      summary: Returns all vacation plans.
      responses:
        "200":
          description: All went well
          content:
            application/json: #Response is returned in JSON
              schema:
                type: object
                properties:
                  Successful:
                    type: boolean
                    default: true
                  returned:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        default: 1
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/vacationplan"
                      first_page_url:
                        type: string
                      from:
                        type: integer
                        default: 1
                      next_page_url:
                        type: string
                      path:
                        type: string
                      per_page:
                        type: string
                      prev_page_url:
                        type: string
                      to:
                        type: integer
                        default: 1
    post:
      tags: ["Vacation Plan"]
      summary: Store a new vacation plan.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vacationplan"
        required: true
      responses:
        "201":
          description: Vacation plan created
          content:
            application/json: #Response is returned in JSON
              schema:
                $ref: "#/components/schemas/successful"
  "/vacationplans/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the vacation plan
      # Since this is in the path, the parameter HAS to be required
      required: true
      # Defining the type of the parameter
      schema:
        # In this case, it is just a string
        type: string
    get:
      tags: ["Vacation Plan"]
      summary: Get a single vacation plan.
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successful"
        "404":
          description: Vacation plan not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unsuccessful"
    put:
      tags: ["Vacation Plan"]
      summary: Update a vacation plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vacationplan"
        required: true
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successful"
        "404":
          description: Vacation plan not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unsuccessful"
    delete:
      tags: ["Vacation Plan"]
      summary: Delete a post
      responses:
        "200":
          description: All went well
          content:
            application/json:
              schema:
                type: object
                properties:
                  Successful:
                    type: boolean
                    default: true
        "404":
          description: Post not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unsuccessful"